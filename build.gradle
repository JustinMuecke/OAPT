/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'application'
}

repositories {
    mavenLocal()
    maven {
        url = uri('file://C:/Users/Doo5ive/git/GLaMoR/OAPT/external-jars/fusion/oapt')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.apache.jena.jena.arq
    api libs.org.apache.jena.jena.core
    api libs.net.sourceforge.owlapi.owlapi.distribution
    api libs.ru.avicomp.ontapi
    api libs.org.dom4j.dom4j
    api libs.org.apache.lucene.lucene.snowball
    api libs.junit.junit
    api libs.org.openrdf.sesame.sesame.repository.api
    api libs.xml.apis.xml.apis
    api libs.org.apache.commons.commons.collections4
    api libs.net.sf.jwordnet.jwnl
    api libs.net.sf.jung.jung.visualization
    api libs.org.apache.commons.commons.lang3
    api libs.net.sourceforge.owlapi.org.semanticweb.hermit
    api libs.me.shib.java.lib.diction
    api libs.fr.lirmm.yamplusplus.yampp.ls
    api libs.net.sf.jung.jung.graph.impl
    api libs.commons.collections.commons.collections
    api libs.org.apache.logging.log4j.log4j.core
    api libs.com.miglayout.miglayout

    implementation files("libs/snowball/1.0.0/snowball-1.0.jar")
    implementation files("libs/agg/1.0/agg.jar")
    implementation files("libs/align/1.0/align.jar")
    implementation files("libs/jung/1.0/jung-1.5.4.jar")
    implementation files("libs/matrix/1.0/matrix.jar")
    implementation files("libs/moduleExtractor/localModularity.jar")
    implementation files("libs/sesame/1.0/sesame.jar")
    implementation files("libs/ws4j/1.0.0/ws4j-1.0.1.jar")

    // JUnit or other test dependencies:
    testImplementation libs.org.slf4j.slf4j.jdk14
}


group = 'ontology-modularization'
version = '0.0.1'
description = 'Onotology Analysis and Partitioning Tool'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

application{
    mainClass = "main.Main"
}
